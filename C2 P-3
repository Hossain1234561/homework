#include <stdio.h>
#include <string.h>

#define MAX_MEMBERS 5
#define MAX_DAYS 6
#define MAX_LEN 50


const char *days[MAX_DAYS] = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};


char memberNames[MAX_MEMBERS][MAX_LEN] = {
    "Zaphod Beeblebrox", "Trillian Astra", "Ford Prefect", "Arthur Dent", "Marvin"
};

char memberNicknames[MAX_MEMBERS][MAX_LEN] = {
    "Zaphod", "Trill", "Ford", "Arthur", "Marv"
};


const char *exercise_types[][3] = {
    {"Running", "Cycling", "Fast Walking"}, 
    {"Push-ups", "Squats", ""},             
    {"Leg Press", "Leg Curl", ""},          
    {"Pull-ups", "Chin-ups", ""},           
    {"Plank", "Crunches", ""}               
};

char member_routine[MAX_MEMBERS][MAX_DAYS][2][MAX_LEN]; 

void printMemberList() {
    int i;
    printf("\n=== Milliways Members ===\n");
    for (i = 0; i < MAX_MEMBERS; i++) {
        printf("%d. %s (%s)\n", i + 1, memberNames[i], memberNicknames[i]);
    }
}


void setExerciseRoutine() {
    int i, d, card, strength, coreCount = 0;
    printMemberList();
    printf("Enter member number (1-%d): ", MAX_MEMBERS);
    scanf("%d", &i);
    i--; 

    if (i < 0 || i >= MAX_MEMBERS) {
        printf("Invalid member.\n");
        return;
    }

    printf("\nSetting routine for %s (%s):\n", memberNames[i], memberNicknames[i]);

    coreCount = 0;
    for (d = 0; d < MAX_DAYS; d++) {
        printf("\nDay: %s\n", days[d]);

       
        printf("Select a cardio exercise (0: Running, 1: Cycling, 2: Fast Walking): ");
        scanf("%d", &card);
        if (card < 0 || card > 2) card = 0; 
        strcpy(member_routine[i][d][0], exercise_types[0][card]);

        
        printf("Select type - 1: Full-body, 2: Lower-body, 3: Upper-body, 4: Core: ");
        scanf("%d", &strength);
        if (strength == 4 && coreCount >= 1) {
            printf("Core exercise already used this week. Defaulting to Full-body.\n");
            strength = 1;
        }

        if (strength < 1 || strength > 4) strength = 1; 

        int exIndex = 0;
        printf("Choose exercise (0 or 1): ");
        scanf("%d", &exIndex);
        if (exIndex < 0 || exIndex > 1) exIndex = 0;

        strcpy(member_routine[i][d][1], exercise_types[strength][exIndex]);

        if (strength == 4) coreCount++;
    }

    printf("\nRoutine set successfully.\n");
}

void getExerciseRoutine() {
    int i, d;
    char name[MAX_LEN];
    printMemberList();
    printf("Enter full member name: ");
    scanf(" %[^\n]s", name); 

    for (i = 0; i < MAX_MEMBERS; i++) {
        if (strcmp(memberNames[i], name) == 0) {
            printf("\nWorkout Routine for %s (%s):\n", memberNames[i], memberNicknames[i]);
            for (d = 0; d < MAX_DAYS; d++) {
                printf("%s: Cardio - %s | Strength/Core - %s\n",
                       days[d],
                       member_routine[i][d][0],
                       member_routine[i][d][1]);
            }
            return;
        }
    }

    printf("Member not found.\n");
}


void trainingPhysicalMenu() {
    int choice;
    while (1) {
        printf("\n=== Physical Strength & Knowledge Menu ===\n");
        printf("1. Set Basic Workout Routine\n");
        printf("2. View Basic Workout Routine\n");
        printf("0. Back\n");
        printf("Select: ");
        scanf("%d", &choice);

        if (choice == 1)
            setExerciseRoutine();
        else if (choice == 2)
            getExerciseRoutine();
        else if (choice == 0)
            break;
        else
            printf("Invalid option.\n");
    }
}


int main() {
    int menu;
    while (1) {
        printf("\n=== MAIN MENU ===\n");
        printf("1. Audition Management\n");
        printf("2. Training\n");
        printf("3. Debut\n");
        printf("0. Exit\n");
        printf("Choose: ");
        scanf("%d", &menu);

        if (menu == 0) {
            printf("Goodbye.\n");
            break;
        } else if (menu == 2) {
            trainingPhysicalMenu();
        } else {
            printf("Feature not implemented.\n");
        }
    }

    return 0;
}
