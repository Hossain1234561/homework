#include <stdio.h>
#include <string.h>

#define MAX_JOBS 10
#define TITLE_LEN 50
#define DATE_LEN 11
#define FIELD_LEN 30

typedef struct {
    int id;
    char title[TITLE_LEN];
    char postDate[DATE_LEN];
    char deadline[DATE_LEN];
    int hires;
    char field[FIELD_LEN];
} Job;

typedef struct {
    char name[20];
    char apiKey[50];
    char apiUrl[100];
} SocialNetwork;

Job jobs[MAX_JOBS];
int jobCount = 0;
int jobIDCounter = 1;

SocialNetwork socials[5] = {
    {"Facebook", "FB123", "https://api.facebook.com/post"},
    {"Instagram", "IG456", "https://api.instagram.com/post"},
    {"Thread", "TH789", "https://api.thread.com/post"},
    {"LinkedIn", "LI321", "https://api.linkedin.com/post"},
    {"X", "X654", "https://api.x.com/post"}
};

void createJob() {
    if (jobCount >= MAX_JOBS) {
        printf("⚠ Cannot create more jobs.\n");
        return;
    }

    Job *j = &jobs[jobCount];
    j->id = jobIDCounter++;

    printf("Enter title: ");
    fgets(j->title, TITLE_LEN, stdin);
    j->title[strcspn(j->title, "\n")] = '\0';

    printf("Enter posting date (YYYY-MM-DD): ");
    fgets(j->postDate, DATE_LEN, stdin);
    j->postDate[strcspn(j->postDate, "\n")] = '\0';

    printf("Enter deadline (YYYY-MM-DD): ");
    fgets(j->deadline, DATE_LEN, stdin);
    j->deadline[strcspn(j->deadline, "\n")] = '\0';

    printf("Enter number of hires: ");
    scanf("%d", &j->hires);
    getchar(); // consume newline

    printf("Enter job field: ");
    fgets(j->field, FIELD_LEN, stdin);
    j->field[strcspn(j->field, "\n")] = '\0';

    jobCount++;
    printf("✅ Job created!\n");
}

void viewJobs() {
    if (jobCount == 0) {
        printf("⚠ No job postings available.\n");
        return;
    }

    for (int i = 0; i < jobCount; i++) {
        Job *j = &jobs[i];
        printf("ID: %d | Title: %s | Deadline: %s\n", j->id, j->title, j->deadline);
    }
}

void postToSocial() {
    if (jobCount == 0) {
        printf("⚠ No jobs to post.\n");
        return;
    }

    printf("Choose a job ID to post: ");
    int id;
    scanf("%d", &id);
    getchar(); // consume newline

    int found = 0;
    for (int i = 0; i < jobCount; i++) {
        if (jobs[i].id == id) {
            found = 1;
            printf("Select a social network:\n");
            for (int j = 0; j < 5; j++) {
                printf("%d. %s\n", j + 1, socials[j].name);
            }
            int choice;
            scanf("%d", &choice);
            getchar();
            if (choice >= 1 && choice <= 5) {
                printf("✅ Posted job '%s' to %s!\n", jobs[i].title, socials[choice - 1].name);
            } else {
                printf("⚠ Invalid choice.\n");
            }
            break;
        }
    }

    if (!found) {
        printf("⚠ Job ID not found.\n");
    }
}

void findSpecialist() {
    int choice;
    while (1) {
        printf("\n[Find Specialist Menu]\n");
        printf("1. Create Job Posting\n");
        printf("2. View Job Postings\n");
        printf("3. Post on Social Networks\n");
        printf("4. Exit\n");
        printf("Select: ");
        scanf("%d", &choice);
        getchar(); // consume newline

        switch (choice) {
            case 1: createJob(); break;
            case 2: viewJobs(); break;
            case 3: postToSocial(); break;
            case 4: return;
            default: printf("⚠ Invalid option.\n");
        }
    }
}

int main() {
    findSpecialist();
    return 0;
}
